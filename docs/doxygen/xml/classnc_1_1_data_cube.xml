<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classnc_1_1_data_cube" kind="class" language="C++" prot="public">
    <compoundname>nc::DataCube</compoundname>
    <includes refid="_data_cube_8hpp" local="no">DataCube.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename dtype</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnc_1_1_data_cube_1aaade9ff59e3fe56b9b36c9c3883f6d3e" prot="public" static="no">
        <type>std::deque&lt; <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &gt;::<ref refid="classnc_1_1_data_cube_1aaade9ff59e3fe56b9b36c9c3883f6d3e" kindref="member">const_iterator</ref></type>
        <definition>typedef std::deque&lt;NdArray&lt;dtype&gt; &gt;::const_iterator nc::DataCube&lt; dtype &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="49" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnc_1_1_data_cube_1adfed19a7fda0e5d4742ae4818c338a99" prot="public" static="no">
        <type>std::deque&lt; <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &gt;::<ref refid="classnc_1_1_data_cube_1adfed19a7fda0e5d4742ae4818c338a99" kindref="member">iterator</ref></type>
        <definition>typedef std::deque&lt;NdArray&lt;dtype&gt; &gt;::iterator nc::DataCube&lt; dtype &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="48" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnc_1_1_data_cube_1a2a2d6e331ac14ad822e3de20309e5e56" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &gt;</type>
        <definition>std::deque&lt;NdArray&lt;dtype&gt; &gt; nc::DataCube&lt; dtype &gt;::cube_</definition>
        <argsstring></argsstring>
        <name>cube_</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="53" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1_data_cube_1ad5d16b97aa14113b978a0706a32cd633" prot="private" static="no" mutable="no">
        <type><ref refid="classnc_1_1_shape" kindref="compound">Shape</ref></type>
        <definition>Shape nc::DataCube&lt; dtype &gt;::elementShape_</definition>
        <argsstring></argsstring>
        <name>elementShape_</name>
        <initializer>{ 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="54" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnc_1_1_data_cube_1a8224b613a7c87a16e06ef08d6f90926e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nc::DataCube&lt; dtype &gt;::DataCube</definition>
        <argsstring>()=default</argsstring>
        <name>DataCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a7ae08af82b0553d2b294286bdf06703b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::DataCube&lt; dtype &gt;::DataCube</definition>
        <argsstring>(uint32 inSize)</argsstring>
        <name>DataCube</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>inSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor, preallocates to the input size</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inSize</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="67" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a8925f65b525c2b4fe04c711851b66828" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::at</definition>
        <argsstring>(uint32 inIndex)</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access method, with bounds checking</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="78" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1ab78c6fc396ea087819cdef43f316da4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>const NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::at</definition>
        <argsstring>(uint32 inIndex) const</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Const access method, with bounds checking</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="90" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a5f746c56a1cf6a47747768a14e9383fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a reference to the last element of the array</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="100" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a8e97e7afdace6395e82b44d2c70a7014" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_data_cube_1adfed19a7fda0e5d4742ae4818c338a99" kindref="member">iterator</ref></type>
        <definition>iterator nc::DataCube&lt; dtype &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an iterator to the beginning of the container</para><para><simplesect kind="return"><para>iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="110" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1aff248af13543b07f8755a645e2511506" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_data_cube_1aaade9ff59e3fe56b9b36c9c3883f6d3e" kindref="member">const_iterator</ref></type>
        <definition>const_iterator nc::DataCube&lt; dtype &gt;::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a const_iterator to the beginning of the container</para><para><simplesect kind="return"><para>const_iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="120" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1af9484ba42f739c5a4e0a32c0d8f916ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_data_cube_1aaade9ff59e3fe56b9b36c9c3883f6d3e" kindref="member">const_iterator</ref></type>
        <definition>const_iterator nc::DataCube&lt; dtype &gt;::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a const_iterator to 1 past the end of the container</para><para><simplesect kind="return"><para>const_iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="177" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1abbaa9ebba302183cae3563c9eb371ee3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::dump</definition>
        <argsstring>(const std::string &amp;inFilename) const</argsstring>
        <name>dump</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>inFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Outputs the <ref refid="classnc_1_1_data_cube" kindref="compound">DataCube</ref> as a .bin file</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inFilename</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="130" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="130" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a65b25455af3a2845f426af68d249c6ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_data_cube_1adfed19a7fda0e5d4742ae4818c338a99" kindref="member">iterator</ref></type>
        <definition>iterator nc::DataCube&lt; dtype &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an iterator to 1 past the end of the container</para><para><simplesect kind="return"><para>iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="167" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a007b4c69b145e15faa40d8c3be4d36ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a reference to the first element of the array</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="187" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1ac569e0c62a9e5cbf21228b85128a53a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::DataCube&lt; dtype &gt;::isempty</definition>
        <argsstring>() noexcept</argsstring>
        <name>isempty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests whether or not the container is empty</para><para><simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="157" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1af85d4c43f1ced174000d1f1f2117d445" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::operator[]</definition>
        <argsstring>(uint32 inIndex)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access operator, no bounds checking</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="283" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1ae23b9d13c65a75d269e34b7952ea8666" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>const NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::operator[]</definition>
        <argsstring>(uint32 inIndex) const</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Const access operator, no bounds checking</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="295" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a8f17538e077a9eefdece159adb6673a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the last element in the container </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="215" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a48dc4f5dad4f94104ce545ad24ea13ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::pop_front</definition>
        <argsstring>()</argsstring>
        <name>pop_front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the first element in the container </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="223" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a00f652afe3e8734f7d0707b12afd6a65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::push_back</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inArray)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new element at the end of the container</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="233" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="233" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a320959d355bddd6993d851cf67a0f88d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::push_front</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inArray)</argsstring>
        <name>push_front</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new element at the beginning of the container</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="257" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="257" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a1e7e4ce08e0c57abb661a8f95192173e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classnc_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
        <definition>const Shape&amp; nc::DataCube&lt; dtype &gt;::shape</definition>
        <argsstring>() const noexcept</argsstring>
        <name>shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number shape of the element arrays</para><para><simplesect kind="return"><para><ref refid="classnc_1_1_shape" kindref="compound">Shape</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="197" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a36da58aa8d2ba848746e744e82b87942" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1aacba4d66f94f6f53637e23c5d82e20d8" kindref="member">uint32</ref></type>
        <definition>uint32 nc::DataCube&lt; dtype &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size of the container array</para><para><simplesect kind="return"><para>size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="207" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="207" bodyend="210"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Convenience container for holding a uniform array of NdArrays. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="21">
        <label>nc::DataCube&lt; dtype &gt;</label>
        <link refid="classnc_1_1_data_cube"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" line="45" column="1" bodyfile="C:/Users/pilgeda/Documents/GitHub/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="44" bodyend="299"/>
    <listofallmembers>
      <member refid="classnc_1_1_data_cube_1a8925f65b525c2b4fe04c711851b66828" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>at</name></member>
      <member refid="classnc_1_1_data_cube_1ab78c6fc396ea087819cdef43f316da4e" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>at</name></member>
      <member refid="classnc_1_1_data_cube_1a5f746c56a1cf6a47747768a14e9383fc" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>back</name></member>
      <member refid="classnc_1_1_data_cube_1a8e97e7afdace6395e82b44d2c70a7014" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>begin</name></member>
      <member refid="classnc_1_1_data_cube_1aff248af13543b07f8755a645e2511506" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>cbegin</name></member>
      <member refid="classnc_1_1_data_cube_1af9484ba42f739c5a4e0a32c0d8f916ca" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>cend</name></member>
      <member refid="classnc_1_1_data_cube_1aaade9ff59e3fe56b9b36c9c3883f6d3e" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>const_iterator</name></member>
      <member refid="classnc_1_1_data_cube_1a2a2d6e331ac14ad822e3de20309e5e56" prot="private" virt="non-virtual"><scope>nc::DataCube</scope><name>cube_</name></member>
      <member refid="classnc_1_1_data_cube_1a8224b613a7c87a16e06ef08d6f90926e" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>DataCube</name></member>
      <member refid="classnc_1_1_data_cube_1a7ae08af82b0553d2b294286bdf06703b" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>DataCube</name></member>
      <member refid="classnc_1_1_data_cube_1abbaa9ebba302183cae3563c9eb371ee3" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>dump</name></member>
      <member refid="classnc_1_1_data_cube_1ad5d16b97aa14113b978a0706a32cd633" prot="private" virt="non-virtual"><scope>nc::DataCube</scope><name>elementShape_</name></member>
      <member refid="classnc_1_1_data_cube_1a65b25455af3a2845f426af68d249c6ae" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>end</name></member>
      <member refid="classnc_1_1_data_cube_1a007b4c69b145e15faa40d8c3be4d36ba" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>front</name></member>
      <member refid="classnc_1_1_data_cube_1ac569e0c62a9e5cbf21228b85128a53a5" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>isempty</name></member>
      <member refid="classnc_1_1_data_cube_1adfed19a7fda0e5d4742ae4818c338a99" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>iterator</name></member>
      <member refid="classnc_1_1_data_cube_1af85d4c43f1ced174000d1f1f2117d445" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>operator[]</name></member>
      <member refid="classnc_1_1_data_cube_1ae23b9d13c65a75d269e34b7952ea8666" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>operator[]</name></member>
      <member refid="classnc_1_1_data_cube_1a8f17538e077a9eefdece159adb6673a1" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>pop_back</name></member>
      <member refid="classnc_1_1_data_cube_1a48dc4f5dad4f94104ce545ad24ea13ac" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>pop_front</name></member>
      <member refid="classnc_1_1_data_cube_1a00f652afe3e8734f7d0707b12afd6a65" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>push_back</name></member>
      <member refid="classnc_1_1_data_cube_1a320959d355bddd6993d851cf67a0f88d" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>push_front</name></member>
      <member refid="classnc_1_1_data_cube_1a1e7e4ce08e0c57abb661a8f95192173e" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>shape</name></member>
      <member refid="classnc_1_1_data_cube_1a36da58aa8d2ba848746e744e82b87942" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
